// Generated by CoffeeScript 1.12.6

/**
* 変数の型をビットマスクの形で取得
*
* @class Type
* @see http://javascripter.hatenablog.com/entry/20081002/1222962329
 */
var Type;

Type = (function() {
  function Type() {}

  Type.OBJECT = 0x01;

  Type.ARRAY = 0x02;

  Type.STRING = 0x04;

  Type.FUNCTION = 0x08;

  Type.NUMBER = 0x10;

  Type.BOOLEAN = 0x20;

  Type.UNDEFINED = 0x40;

  Type.NULL = 0x80;


  /**
  * 型判定
  *
  * @method get
  * @param data {mixed} 判定する変数
  * @return {Number} ビットマスクで表現された型
   */

  Type.get = function(data) {
    var ret;
    ret = 0x00;
    if (data instanceof Object) {
      ret |= 0x01;
    }
    if (data instanceof Array) {
      ret |= 0x02;
    }
    if (data instanceof String || typeof data === 'string') {
      ret |= 0x04;
    }
    if (data instanceof Function) {
      ret |= 0x08;
    }
    if (data instanceof Number || typeof data === 'number') {
      ret |= 0x10;
    }
    if (data instanceof Boolean || typeof data === 'boolean') {
      ret |= 0x20;
    }
    if (data === void 0) {
      ret |= 0x40;
    }
    if (data === null) {
      ret |= 0x80;
    }
    return ret;
  };


  /**
  * 文字列判定
  *
  * @method string
  * @param data {mixed} 判定する変数
  * @return {Boolean} 文字列 | 数値ならtrue
   */

  Type.string = function(data) {
    return (this.get(data)) & this.STRING;
  };


  /**
  * 数値判定
  *
  * @method number
  * @param data {mixed} 判定する変数
  * @return {Boolean} 数値ならtrue
   */

  Type.number = function(data) {
    return (this.get(data)) & this.NUMBER;
  };


  /**
  * 配列判定
  *
  * @method array
  * @param data {mixed} 判定する変数
  * @return {Boolean} 配列ならtrue
   */

  Type.array = function(data) {
    return (this.get(data)) & this.ARRAY;
  };


  /**
  * 文字列or数値判定
  *
  * @method strnum
  * @param data {mixed} 判定する変数
  * @return {Boolean} 文字列 | 数値ならtrue
   */

  Type.strnum = function(data) {
    return (this.get(data)) & (this.STRING | this.NUMBER);
  };

  return Type;

})();

module.exports = Type;
